<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmys.story.mapper.MetaMapper">
    <resultMap id="BaseResultMap" type="com.nmys.story.model.entity.Metas">
        <id column="mid" jdbcType="INTEGER" property="mid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="parent" jdbcType="INTEGER" property="parent" />
    </resultMap>

    <insert id="saveMeta" parameterType="com.nmys.story.model.entity.Metas" useGeneratedKeys="true" keyProperty="mid">
        insert into t_metas (mid, name, slug,
        type, description, sort,
        parent)
        values (#{mid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
        #{parent,jdbcType=INTEGER})
    </insert>

    <update id="updateMeta" parameterType="com.nmys.story.model.entity.Metas">
        update t_metas
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=INTEGER},
            </if>
        </set>
        where mid = #{mid,jdbcType=INTEGER}
    </update>

    <delete id="delMetaById">
        DELETE FROM t_metas WHERE mid = #{id}
    </delete>

    <select id="getMetasByType" resultMap="BaseResultMap">
        SELECT * FROM t_metas WHERE type = #{type} order by sort desc
    </select>

    <select id="getMetaById" resultMap="BaseResultMap">
        SELECT * FROM t_metas WHERE mid = #{id}
    </select>

    <select id="selectMetaListByConditions" resultMap="BaseResultMap">
        SELECT * FROM t_metas WHERE type = #{type} and name = #{name}
    </select>

    <resultMap id="MetasEX" type="com.nmys.story.model.entity.MetasEx" extends="BaseResultMap">
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getMetasBySql" resultMap="MetasEX">
        SELECT
            a.*, count(b.cid) AS count
        FROM
            t_metas a
            LEFT JOIN `t_relationships` b ON a.mid = b.mid
        WHERE
            a.type = #{type} group by a.mid order by count desc, a.mid desc
    </select>

    <select id="getMeta" resultMap="MetasEX">
        SELECT
            a.*, count(b.cid) AS count
        FROM
            t_metas a
            LEFT JOIN `t_relationships` b ON a.mid = b.mid
        WHERE
            a.type = #{type} and a.name = #{name} group by a.mid order by count desc, a.mid desc
    </select>

    <select id="countWithSql" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(0)
        FROM t_contents a LEFT JOIN t_relationships b ON a.cid = b.cid
        WHERE b.mid = #{value} AND a.status = 'publish' AND a.type = 'post';
    </select>


    <!--<insert id="saveComment" parameterType="com.nmys.story.model.entity.Comments" useGeneratedKeys="true" keyProperty="coid">-->
        <!--insert into t_comments (coid, cid, created,-->
        <!--author, author_id, owner_id,-->
        <!--mail, url, ip, agent,-->
        <!--type, status, parent,-->
        <!--content)-->
        <!--values (#{coid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{created,jdbcType=INTEGER},-->
        <!--#{author,jdbcType=VARCHAR}, #{author_id,jdbcType=INTEGER}, #{owner_id,jdbcType=INTEGER},-->
        <!--#{mail,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},-->
        <!--#{agent,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},-->
        <!--#{parent,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})-->
    <!--</insert>-->

    <!--<delete id="delCommentById">-->
        <!--DELETE FROM t_comments WHERE coid = #{id}-->
    <!--</delete>-->

    <!--<insert id="saveUser" parameterType="com.nmys.story.model.entity.Users" useGeneratedKeys="true" keyProperty="uid">-->
    <!--INSERT INTO t_users (uid, username, password,-->
    <!--email, home_url, screen_name,-->
    <!--created, activated, logged,-->
    <!--group_name)-->
    <!--VALUES (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},-->
    <!--#{email,jdbcType=VARCHAR}, #{home_url,jdbcType=VARCHAR}, #{screen_name,jdbcType=VARCHAR},-->
    <!--#{created,jdbcType=INTEGER}, #{activated,jdbcType=INTEGER}, #{logged,jdbcType=INTEGER},-->
    <!--#{group_name,jdbcType=VARCHAR})-->
    <!--</insert>-->

    <!--<select id="getUserByUserNameAndPassword" resultMap="BaseResultMap">-->
    <!--SELECT * FROM t_users WHERE username = #{username} and password = #{password}-->
    <!--</select>-->

    <!--<select id="selectUserByUsername" resultMap="BaseResultMap">-->
    <!--SELECT * FROM t_users WHERE username = #{username}-->
    <!--</select>-->

    <!--<select id="selectCommentCount" resultType="java.lang.Integer">-->
        <!--SELECT count(*) FROM t_comments-->
    <!--</select>-->

    <!--<select id="selectCommentByid" resultMap="BaseResultMap">-->
        <!--SELECT * from t_comments WHERE cid = #{id}-->
    <!--</select>-->

    <!--<select id="selectNewComments" resultMap="BaseResultMap">-->
        <!--SELECT * FROM  t_comments ORDER BY created DESC-->
    <!--</select>-->

    <!--<select id="selectCommentsByAuthorId" resultMap="BaseResultMap">-->
        <!--SELECT * FROM t_comments WHERE author_id != #{authorId}-->
    <!--</select>-->

    <!--<select id="getCommentsListByContentId" resultMap="BaseResultMap">-->
        <!--SELECT * FROM t_comments WHERE cid = #{cid} and parent = #{parentId} and status = #{status}-->
    <!--</select>-->
</mapper>